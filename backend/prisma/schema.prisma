generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String?
  password    String
  catchPhrase String?
  posts       Post[]
  votes       Vote[]   
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  ProfilePic  String?
}

model Post {
  id         String    @id @default(uuid())
  title      String
  content    String
  published  Boolean   @default(false)
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  tags       String[]
  comments   Comment[]
  votes      Vote[]    
}

model Comment {
  id         String     @id @default(uuid())
  content    String
  likes      Int        @default(0)
  post       Post       @relation(fields: [postId], references: [id])
  postId     String
  parentId   String?    
  parent     Comment?   @relation("CommentReplies", fields: [parentId], references: [id])
  replies    Comment[]  @relation("CommentReplies")
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}


model Vote {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  voteType  VoteType
  created_at DateTime @default(now())
}

enum VoteType {
  UPVOTE
  DOWNVOTE
}
